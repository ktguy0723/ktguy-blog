(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0c91e7"],{"587e":function(s,e,r){"use strict";r.r(e);var a=function(){var s=this,e=s.$createElement;s._self._c;return s._m(0)},p=[function(){var s=this,e=s.$createElement,r=s._self._c||e;return r("section",[r("h1",[s._v("Docker基礎")]),r("h2",[s._v("Dockerとは")]),r("ul",[r("li",[s._v("Dockerは「データやプログラムを隔離できる仕組み」")]),r("li",[s._v("Docker Engineのうえにコンテナが載る")]),r("li",[s._v("コンテナはイメージから作る")])]),r("h2",[s._v("コマンド一般規則")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("docker container run -d          penguin --mode=1\ndocker [コマンド     ] [オプション] [対象]   [引数]\n")])]),r("h2",[s._v("Dockerのコンテナライフサイクル")]),r("ol",[r("li",[r("code",{pre:!0},[s._v("create")]),s._v(" コンテナ作成")]),r("li",[r("code",{pre:!0},[s._v("start")]),s._v(" 起動 ( "),r("code",{pre:!0},[s._v("create")]),s._v(", ``)")]),r("li",[r("code",{pre:!0},[s._v("stop")]),s._v(" 停止")]),r("li",[r("code",{pre:!0},[s._v("rm")]),s._v(" 廃棄")])]),r("ul",[r("li",[s._v("Apache （コンテナのライフサイクル）")])]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("docker run --name xxx(コンテナ名) -d httpd\n// -d バックグラウンド実行\ndocker ps -a\ndocker stop xxx\ndocker rm xxx\n")])]),r("ul",[r("li",[s._v("Apache（通信）")])]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("docker run --name xxx -d -p 8080:80 httpd\n// -p [ホスト]:[コンテナ] ポートの設定\ndocker ps -a\ndocker stop xxx\ndocker rm xxx\n")])]),r("ul",[r("li",[s._v("MySQL")])]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("docker run --name xxx -dit -e MYSQL_ROOT_PASSWORD=myrootpass mysql\n// -d バックグラウンド実行 -it キーボード操作\n// -e 環境変数\ndocker stop xxx\ndocker rm xxx\n")])]),r("ul",[r("li",[s._v("イメージの削除")])]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("docker image ls\ndocker image rm xxx(イメージ名)\ndocker image ls\n")])]),r("ul",[r("li",[s._v("Dockerネットワーク（コンテナ同士の接続）")])]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("docker network create ネットワーク名 // 作成\ndocker network ls ネットワーク名 // 一覧表示\ndocker network rm ネットワーク名 // 削除\n\ndocker run name --xxx -dit --net=ネットワーク名 ...\n")])]),r("ul",[r("li",[s._v("ファイルの移動")])]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("docker cp [コンテナ名]:[コンテナ側のパス] [ホスト側のパス] // コンテナ→ホスト\ndocker cp [ホスト側のパス] [コンテナ名]:[コンテナ側のパス] // ホスト→コンテナ\n")])]),r("ul",[r("li",[r("p",[s._v("ボリューム（ストレージの1領域）のマウント")]),r("ul",[r("li",[s._v("バインドマウント（Docker Engine以外のローカル上にマウント）")])]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("docker run --name xxx -d -p 8080:80 -v [ホスト側のパス]:[コンテナ側のパス] httpd\n")])]),r("ul",[r("li",[s._v("ボリュームマウント（Docker Engine上の領域内にボリュームを作成して使用）")])]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("docker volume create xxx(ボリューム名)\ndocker run --name yyy(コンテナ名) -d -p 8089:80 -v [ホスト側パス]:[コンテナ側パス] httpd\ndocker volume inspect xxx \t// ボリュームの詳細情報の表示\ndocker vokume rm xxx \t\t// ボリュームの削除\n")])])])]),r("h2",[s._v("コンテナのイメージ化")]),r("ol",[r("li",[r("p",[s._v("commit")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("docker commit コンテナ名 作成するイメージ名\n")])])]),r("li",[r("p",[s._v("Dockerfile Dockerfileを"),r("code",{pre:!0},[s._v("build")]),s._v("することで、イメージを作成する。")]),r("ul",[r("li",[s._v("サンプル")])]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-dockerfile"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("FROM")]),s._v(" httpd\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("COPY")]),r("span",{pre:!0,attrs:{class:"bash"}},[s._v(" index.html /usr/"),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("local")]),s._v("/apache2/htdocs/")]),s._v("\n")])]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("docker build -t 作成するイメージ名 材料フォルダのパス\n")])])])]),r("h2",[s._v("Docker Compose")]),r("p",[s._v("Docker Composeはコンテナ、ネットワーク、ボリュームを作る")]),r("p",[s._v("ファイル名：docker-componse.yml")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-yml"}},[r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("version:")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"3"')]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("services:")]),s._v("\n  "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("コンテナ名1:")]),s._v("\n  "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("コンテナ名2:")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("networks:")]),s._v(" \n  "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("ネットワーク名1:")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("volumes:")]),s._v(" \n  "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("ボリューム1:")]),s._v("\n  "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("ボリューム2:")]),s._v("\n")])]),r("ul",[r("li",[s._v("実行例")])]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("docker-compose -f [定義ファイルのパス] up [オプション]   // コンテナや周辺環境を作成\ndocker-compose -f [定義ファイルのパス] down [オプション] // コンテナとネットワークを削除\ndocker-compose -f [定義ファイルのパス] stop [オプション] // コンテナを停止するコマンド\n")])]),r("h1",[s._v("Docker + Vue.js 開発環境構築")]),r("p",[r("a",{attrs:{href:"https://jp.vuejs.org/v2/cookbook/dockerize-vuejs-app.html"}},[s._v("公式")])]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-dockerfile"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("FROM")]),s._v(" node:lts-alpine\n\n"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# 静的コンテンツを配信するシンプルな http サーバをインストールする")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("RUN")]),r("span",{pre:!0,attrs:{class:"bash"}},[s._v(" npm install -g http-server")]),s._v("\n\n"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# カレントワーキングディレクトリとして 'app' フォルダを指定する")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("WORKDIR")]),r("span",{pre:!0,attrs:{class:"bash"}},[s._v(" /app")]),s._v("\n\n"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# `package.json` と `package-lock.json` （あれば）を両方コピーする")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("COPY")]),r("span",{pre:!0,attrs:{class:"bash"}},[s._v(" package*.json ./")]),s._v("\n\n"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# プロジェクトの依存ライブラリをインストールする")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("RUN")]),r("span",{pre:!0,attrs:{class:"bash"}},[s._v(" npm install")]),s._v("\n\n"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# カレントワーキングディレクトリ(つまり 'app' フォルダ)にプロジェクトのファイルやフォルダをコピーする")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("COPY")]),r("span",{pre:!0,attrs:{class:"bash"}},[s._v(" . .")]),s._v("\n\n"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# 本番向けに圧縮しながらアプリケーションをビルドする")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("RUN")]),r("span",{pre:!0,attrs:{class:"bash"}},[s._v(" npm run build")]),s._v("\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("EXPOSE")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("8080")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("CMD")]),r("span",{pre:!0,attrs:{class:"bash"}},[s._v(" [ "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"http-server"')]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"dist"')]),s._v(" ]")]),s._v("\n")])])])}],n=r("2877"),t={},l=Object(n["a"])(t,a,p,!1,null,null,null);e["default"]=l.exports}}]);
//# sourceMappingURL=chunk-2d0c91e7.b42e1ab2.js.map